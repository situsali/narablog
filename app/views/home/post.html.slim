- page_title @post.title
- content_for :metadata do
  meta[property="og:title" content=(@post.title)]
  meta[property="og:type" content="website"]
  meta[property="og:url" content=(request.original_url)]
  - if @post.image.present?
    meta[property="og:image" content=(request.base_url + @post.image.url)]
  meta[property="og:description" content=(strip_tags(@post.body.to_html)[0..119])]
  meta[property="og:locale" content="id_ID"]
  meta[property="og:site_name" content=(ENV['SITENAME'])]
  meta[property="article:published_time" content=(@post.created_at.iso8601)]
  meta[property="article:modified_time" content=(@post.updated_at.iso8601)]
  meta[property="article:author" content=(@post.user.name)]
  - @post.categories.each do |category|
    meta[property="article:section" content=(category.name)]
  - @post.tags.each do |tag|
    meta[property="article:tag" content=(tag.name)]

section.hero.is-link.is-bold
  .hero-body
    .container.is-fluid
      h1.title.is-size-1
        = @post.title
      h2.subtitle
        = @post.created_at.to_date.to_formatted_s(:long)
        = " - Ditulis oleh #{@post.user.name.capitalize}"
      .tags
        - tag_colors = ['is-warning', 'is-danger', 'is-dark', 'is-primary']
        - @post.tags.each do |tag|
          span class=("tag #{tag_colors.sample}")
              = tag.name
  = render partial: 'wave'

.container.is-fluid
  section.section
    .columns
      .column
        article
          .content.is-size-5
            = sanitize(@post.body.to_html)

            hr
            h1.title
              | Comments

            article.media
              .media-content
                = simple_form_for Comment.new, url: post_comment_path, method: :post do |f|
                  .field
                    .control
                      = f.text_area :body, class: 'textarea'
                    = f.hint 'Support markdown formatting'

                  - if user_signed_in?
                      .field
                        .control
                          = f.button :submit, 'Post Comment', class: 'is-link'
                  - else
                      .field
                        .control
                           p.has-text-danger
                             | Please sign in to post your comment:
                           = link_to 'Sign in', user_session_path,  class: 'button is-primary'


            - Comment.in_post(@post).each do |comment|
                article.media
                  figure.media-left
                    p.image.is-64x64
                      img[src="https://bulma.io/images/placeholders/128x128.png"]
                  .media-content
                    .content
                      strong = comment.user.name
                      = sanitize(comment.body.to_html)
      .column.is-4
        = render partial: 'sidebar'
